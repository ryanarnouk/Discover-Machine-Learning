{
  "challenges": [
    {
      "name": "Intro to Classification",
      "section": "classification",
      "number": 1,
      "description": "Every day, as humans we classify things based on shared qualities and characteristics. We don’t even think about it when we do it. Like humans, computers can do the same thing based on the data we give it. <br/> Classification is when we identify what category some data can belong to based on training data we give the computer. That training data gives the computer labels of example pieces of data so when we have a classifier it can recognize what category that could be in. Then with our testing data, we can see how good our classifier is at predicting the category of a given piece of data.",
      "tests": [
      
      ],
      "definitions": [
        "Classification,9"
      ],
      "codeblocks": false,
      "codeblockarea": "<p>This is a placeholder find some image that is good for classification here</p><img src='' style='width: 90%'/>"
    },
    {
      "name": "Classification Example",
      "section": "classification",
      "number": 2, 
      "description": "In order to make a classifier there are many different types of algorithms you can use. Each algorithm is good for a specific task. One of these algorithms <code>Support Vector Machine (SVM)</code> can be used detect what type of flower a given flower is based on things like how wide and long the pedals of the flower are, etc.",
      "tests": [

      ],
      "definitions": [
        "Classification,0",
        "Support Vector Machine,9"
      ],
      "codeblocks": false,
      "codeblockarea": "<h2>Flower Data: </h2><img src='/img/irisflowerdata.png' style='width: 50%;'/><img src='/img/irisflower.png' style='width: 50%;'/><p>Above we have data on the flower. The size of the sepal and the petal, and then we have the type of flower it is. We can then train the computer to make connections between all this data to predict what type of flower it is. We can then predict the accuracy of our classifier by splitting some testing data from the dataset.<img src='/img/irisclassifier.png' style='width: 100%;'/><p>Above is a classifier, each one is using a different algorithm. That can tell you how using a different algorithm can change a lot about a classifier."
    },
    {
      "name": "Types of Algorithms",
      "section": "classification",
      "number": 3, 
      "description": "There are many different types of algorithms for classification, each good for a specific problem. For example, some of the most used algorithms include support vector machines (which we talked about last lesson), K-Nearest Neighbors that can group data points together based on a number around a point, and neural networks which we would talk about in more detail in the next chapter. In this chapter we will focus on Support Vector Machines.",
      "tests": [
        
      ],
      "definitions": [
        "Linear Regression,0"
      ],
      "codeblocks": false,
      "codeblockarea": "<p>Placeholder</p>"
    },
    {
      "name": "Support Vector Machines",
      "section": "classification",
      "number": 4, 
      "description": "In this chapter we are going to focus on <strong>support vector machines</strong>. Support vector machines work by plotting a line between data points. It plots this line by plotting 3 seperate lines each one going to a data point. The distance between these points and the main line are called the margin. Maximizing the distance between the nearest datapoint on either class will help us get the right line.",
      "tests": [
        
      ],
      "definitions": [
        "Linear Regression,0"
      ],
      "codeblocks": false,
      "codeblockarea": "<img src='/img/supportvectormachine.png' /><p>Above you can see a support vector machine in action. It finds the optimal line to seperate two data plots based on the maximum margin between the nearest data points on either side. This could be data on iris flowers and how big they are or anything that SVM might be optimal for."
    },
    {
      "name": "Import Algorithm",
      "section": "classification",
      "number": 5, 
      "description": "Now that we know what algorithm we want to use, we need to import it. Using the import function import SVM (support vector machine)",
      "tests": [
        {
          "text": "import support vector machine algorithm",
          "test": "or(code[0], 'svm', 'support vector machine'); assert(code[1], 'importfunction');"
        }
      ], 
      "definitions": [

      ],
      "codeblocks": true
    },
    {
      "name": "Set up X and Y data",
      "section": "classification",
      "number": 6, 
      "description": "We have 2 sets of data the X data and the y data. The X data is going to be the information about the flower and the y plot is going to be the actual type of flower that we will train our model on. Basically we split our data into two parts: information about the flower and then the type of flower. <br /> Set the x value to <code>flower</code> and set the y value to <code>species</code>",
      "tests": [
        {
          "text": "set the plots of data", 
          "test": "assert(code[0], 'flower'); assert(code[1], 'species'); assert(code[2], 'setdata');"
        }
      ], 
      "codeblocks": true 
    }, 
    {
      "name": "Split the Train and Test size",
      "section": "classification",
      "number": 7, 
      "description": "Now we want to split our data for training and testing. For now let’s take 20% of the dataset and use it for testing the algorithm to make sure we did good. Use the <code>set testing data` and set it to 20</code>",
      "tests": [
        {
          "text": "use the set testing data too 20%",
          "test": "assert(code[0], 20); assert(code[1], 'testingdata');"
        }
      ],
      "codeblocks": true
    },
    {
      "name": "Apply the Algorithm",
      "number": 8,
      "description": "Now that we have our data split up into seperate parts, and we have our data to test the algorithm there is one thing we need to do: Apply the algorithm. We want to use linear regression for this so using the apply block apply <code>support vector machine</code>",
      "tests": [
        {
          "text": "fit the algorithm and use linear regression",
          "test": "assert(code[0], 'svm'); assert(code[1], 'applyfunction');"
        }
      ],
      "codeblocks": true
    },
    {
      "name": "Check Accuracy",
      "number": 9,
      "description": "Now that we finished our model we can check the accuracy of our algorithm! <br /> Use the accuracy function to see how good the model is by setting it to support vector machine. ",
      "tests": [
        {
          "text": "check the accuracy of the linear regression algorithm",
          "test": "assert(code[0], 'svm'); assert(code[1], 'accuracyfunction');"
        }
      ], 
      "codeblocks": true
    },
    {
      "name": "Conclusion",
      "number": 10, 
      "description": "Now that we finished our house predictor we can test it out! Try placing a number in square feet and see what it ends up predicting",
      "codeblocks": false,
      "codeblockarea": "<p>Placeholder</p>"
    }
  ] 
}