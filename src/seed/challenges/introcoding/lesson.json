{
  "challenges": [
    {
      "name": "What is Coding",
      "section": "introcoding",
      "number": 1,
      "description": "Coding, otherwise known as programming, is an idea that tells a computer what to do and how to function. Everything that you see on your screen, whether on your phone or your computer, has code running inside of it which tells the computer what to do. There are a lot of different types of programming, such as embedded programming which focuses on things like the operating system or web development which works on things such as websites just like this one. In this course, we are going to use programming for machine learning.",
      "tests": [
        {
          "text": "set value to 20",
          "test": "assert()"
        }
      ],
      "definitions": [
        "Computer Programming,2"
      ],
      "codeblocks": false,
      "hints": [

      ],
      "codeblockarea": "<img src='/img/code.png' alt='an example of programming' style='width: 90%; height: 80%;'/><h3>Above is a snippet of the code powering this very website.</h3>"
    }, 
    {
      "name": "Add a Variable",
      "section": "introcoding",
      "number": 2,
      "description": "In computer programming, variables are used to store information to be referenced later. For example you can use the variable block and create one. Name it <code>x</code> and set it to 3.",
      "tests": [
        {
          "text": "add a variable x and set it too 3",
          "test": "assert(code[0], 'x'); assert(code[1], 3); assert(code[2], 'variablefunction');"
        }
      ],
      "definitions": [
        "Variables,3"
      ],
      "codeblocks": true,
      "hints": [
        "First try adding a <block>variable<block> block set it to <code>x</code>",
        "Make sure that you set the variable to <code>3</code>",
        "<img src='/img/variableblock.png' />"
      ]
    }, 
    {
      "name": "Print variable",
      "section": "introcoding",
      "number": 3, 
      "description": "Another part of programming is printing our output. Below, there is a console which can be used to print text or things such as variables. Add onto the variable function and print it. Using the <code>print</code> function make it print <code>x</code>, and then you can see the variable output in the console.",
      "tests": [
        {
          "text": "print the variable x",
          "test": "assert(code[0], 'x'); assert(code[1], 3); assert(code[2], 'variablefunction'); assert(code[4], 'printfunction'); assert(code[3], 'x')"
        }
      ],
      "definitions": [
        "Print Function,4"
      ],
      "codeblocks": true,
      "previouscode": true,
      "hints": [
        "Use a print function to print the variable x. The value of x should output in the console.",
        "<img src='/img/printvariable.png' />"
      ]
    },
    {
      "name": "Functions",
      "section": "introcoding",
      "number": 4, 
      "description": "Functions are another important part of programming. They can be thought of as a block of code that can be called later in the program and run. This makes the code reusable as you can call and run it multiple times as well as keep the code separated and looking simpler. Make a function using the function block and call it <code>z</code>. Inside it, make a variable named <code>y</code> and set it to some text. Then you can print the variable inside of the function.",
      "tests": [
        {
          "text": "make a function put a variable and print it",
          "test": "assert(code[0], 'z'); assert(code[6], 'functionblock'); assert(code[1], 'y'); lengthfunc(code[2], 0); assert(code[3], 'variablefunction'); lengthfunc(code[4], 0); assert(code[5], 'printfunction');"
        }
      ],
      "definitions": [
        "Functions,5"
      ],
      "codeblocks": true,
      "hints": [
        "Use a function and call it z",
        "Inside the function make a variable y and set it to some text",
        "Print the variable inside the function",
        "<img src='/img/functionblocks.png' />"
      ]
    },
    {
      "name": "Call the function",
      "section": "introcoding",
      "number": 5, 
      "description": "The beauty of a function is how you can call it whenever your heart desires. You can call function<code>z</code> now. Try using a <code>call function</code> and call it to see the print function return a value. Make sure that you call the function outside of the variable and print statement.",
      "tests": [
        {
          "text": "call the function z",
          "test": "assert(code[0], 'z'); assert(code[6], 'functionblock'); assert(code[1], 'y'); lengthfunc(code[2], 0); assert(code[3], 'variablefunction'); lengthfunc(code[4], 0); assert(code[5], 'printfunction'); assert(code[9], 'callfunctionblock'); assert(code[7], 'z')"
        }
      ], 
      "codeblocks": true,
      "previouscode": true,
      "hints": [
        "Add the call function block to call the function z.",
        "Make sure that it is outside of the function block to call it.",
        "<img src='/img/callfunction.png' />"
      ] 
    }, 
    {
      "name": "If statements",
      "number": 6,
      "description": "‚ÄùSimilar to a yes or no question an <code>if</code> statement can check if a value is equal to another value. For example, with an if statement we can check if a variable is equal to a specific text. If that is true the block of code would run and if it is false nothing would run. Try creating an if statement to test if a number is less than or greater than a number by printing some text if it is true.",
      "tests": [
        {
          "text": "Use an if statement to check if a number is equal to or greater than another number",
          "test": "assert(code[3], 'ifstatement');"
        }
      ], 
      "codeblocks": true
    },
    {
      "name": "Else Statements",
      "number": 7, 
      "description": "If the if statement returns false, then you can also execute whatever code you want with an <code>else</code> statement. Add it to the end of an if statement and return text. Now, if the condition returns false, that text would get returned in the console.",
      "tests": [
        {
          "text": "use an else statement to print something else",
          "test": "assert(code[3], 'ifstatement'); assert(code[6], 'elsestatement');"
        }
      ], 
      "codeblocks": true,
      "previouscode": true
    },
    {
      "name": "Conclusion",
      "number": 8, 
      "description": "Now that we have finished learning about the fundamentals of coding and how it can be used we can start learning about machine learning in the next section.",
      "codeblocks": false,
      "codeblockarea": "<h1>Interested in Programming?</h1><p>There are many resources out on the internet to help you learn how to code</p><p>Here are some of my personal favorites:</p><ul><li><a href='http://freecodecamp.org' target='_blank'>freeCodeCamp</a></li><li><a href='http://udacity.com' target='_blank'>Udacity</a></li></ul> <p>There are many more great resources to learn how to code in programming languages that interest you</p>"
    }
  ] 
}
